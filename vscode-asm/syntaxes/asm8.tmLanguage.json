{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "8bit Assembly",
  "patterns": [
    {
      "include": "#keywords"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#chars"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#banks"
    },
    {
      "include": "#labels"
    },
    {
      "include": "#directives"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.asm8",
          "match": "(?i)\\b(?:brk|nop|bnk|dbg|jmp|jsr|rts|adc|sbc|nt[xy]|ro[lr]|r[lr]c|sh[lr]|eor|add|sub|jp[abxy]|and|ior|tn[xy]|asr|bpl|bcv|bcc|beq|cl[nvcz]|bmi|bvs|bcs|bnq|se[nvcz]|in[abxy]|ph[abxy]|ld[abxy]|lz[abxy]|dc[abxy]|pl[abxy]|st[abxy]|lo[abxy]|ts[ab]|tp[ab]|t[ab]s|t[ab]p|cp[abxy]|t[abxy][abxy]|l[abxy][abxy]|c[abxy][abxy]|s[abxy][abxy])\\b"
        }
      ]
    },
    "numbers": {
      "name": "constant.numeric.asm8",
      "patterns": [
        {
          "name": "constant.numeric.binary.asm8",
          "match": "(?<=^|\\s)((?:[#+-]\\s*)?%)[01]{8}(?=$|\\s|:)",
          "captures": {
            "1": {
              "name": "punctuation.definition.numeric.binary.asm8"
            }
          }
        },
        {
          "name": "constant.numeric.hex.asm8",
          "match": "(?i)(?<=^|\\s)((?:[#+-]\\s*)?\\$)[0-9a-f]{2}(?=$|\\s|:)",
          "captures": {
            "1": {
              "name": "punctuation.definition.numeric.hex.asm8"
            }
          }
        },
        {
          "name": "constant.numeric.decimal.asm8",
          "match": "(?<=^|\\s)((?:[#+-]\\s*)?)\\d{1,3}(?=$|\\s|:)",
          "captures": {
            "1": {
              "name": "punctuation.definition.numeric.decimal.asm8"
            }
          }
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.asm8",
      "begin": "\"",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.asm8"
        }
      },
      "end": "\"|(?<!\\\\)(?=\\s*\\n)",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.asm8"
        }
      },
      "patterns": [
        {
          "include": "#escape"
        }
      ]
    },
    "chars": {
      "name": "string.quoted.single.asm8",
      "begin": "'",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.asm8"
        }
      },
      "end": "'|(?<!\\\\)(?=\\s*\\n)",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.asm8"
        }
      },
      "patterns": [
        {
          "include": "#escape"
        }
      ]
    },
    "comments": {
      "name": "comment.line.semicolon.asm8",
      "begin": ";",
      "end": "\n",
      "patterns": [
        {
          "match": "(?i)(@)(returns?|arguments?|parameters?)",
          "captures": {
            "1": {
              "name": "punctuation.definition.block.tag.asm8doc"
            },
            "2": {
              "name": "storage.type.class.asm8doc"
            }
          }
        }
      ]
    },
    "banks": {
      "match": "(?i)(?<=^|\\s)(bank)\\s+(?:([0-9]{1,3})|(\\$[0-9a-f]{2})|(\\%[01]{8})|(swap))\\s*(\\:)(?=$|\\s)",
      "captures": {
        "1": {
          "name": "keyword.operator"
        },
        "2": {
          "name": "constant.numeric.decimal.asm8"
        },
        "3": {
          "name": "constant.numeric.hex.asm8"
        },
        "4": {
          "name": "constant.numeric.binary.asm8"
        },
        "5": {
          "name": "entity.name.label.swap.asm8"
        },
        "6": {
          "name": "punctuation.seperator.label.asm8"
        }
      }
    },
    "dinit": {
      "match": "(?i)(?<=^|\\s)(\\.)(init)\\s+",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.directive.asm8"
        },
        "2": {
          "name": "keyword.control.directive.asm8"
        }
      },
      "name": "meta.embedded.json",
      "patterns": [
        {
          "include": "source.json"
        }
      ]
    },
    "labels": {
      "match": "(?i)(?<=^|\\s)([0-9a-z_]+)\\s*(\\:)(?=$|\\s)",
      "captures": {
        "1": {
          "name": "entity.name.label.asm8"
        },
        "2": {
          "name": "punctuation.seperator.label.asm8"
        }
      }
    },
    "directives": {
      "name": "meta.preprocessor.asm8",
      "match": "(?i)(?<=^|\\s)(\\.)([a-z_]+)(?=$|\\s)",
      "captures": {
        "1": {
          "name": "punctuation.definition.directive.asm8"
        },
        "2": {
          "name": "keyword.control.directive.asm8"
        }
      }
    },
    "escape": {
      "patterns": [
        {
          "match": "\\\\(?:[\"\\\\/bfnrt]|u[0-9a-fA-F]{4})",
          "name": "constant.character.escape.asm8"
        },
        {
          "match": "\\\\.",
          "name": "invalid.illegal.unknown-escape.asm8"
        }
      ]
    }
  },
  "scopeName": "source.asm8"
}
